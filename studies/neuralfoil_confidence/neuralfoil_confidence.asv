clc
clear
close all

% Definir os ângulos de ataque e os números de Reynolds
alpha = -180:5:180; % Intervalo de ângulos de ataque
Re = logspace(3, 9, 10); % Intervalo de Reynolds (escala logarítmica)

% Inicializar matriz para armazenar os resultados
conf_NeuralFoil = zeros(length(alpha), length(Re)); % Prealocar para melhorar o desempenho

% Loop para calcular os valores
for i = 1:length(alpha)
    for j = 1:length(Re)
        fprintf("-> Re = %.2e | AoA = %.2f\n", Re(j), alpha(i))
        % Chamada da função NeuralFoil
        [~, ~, conf_NeuralFoil(i, j)] = NeuralFoil("naca0012", Re(j), 0, alpha(i));
    end
end

% Criar o gráfico 3D
figure()
[X, Y] = meshgrid(Re, alpha); % Criar malha para o gráfico
surf(X, Y, conf_NeuralFoil, 'EdgeColor', 'none') % Gráfico de superfície
colorbar % Mostrar barra de cores para a saída
shading interp % Suavizar os contornos
%colormap jet % Escolher esquema de cores
colormap(flipud(gray))

% Ajustar aparência do gráfico
set(gca, 'XScale', 'log') % Escala logarítmica no eixo X
xlabel('Re')
ylabel('\alpha')
zlabel('H')
title('Neural Foil Confidence')
grid on

saveas(gcf, './studies/neuralfoil_confidence/NeuralFoil_Confidence_Plot_3D.png') % Salvar como arquivo PNG

% Criar o gráfico 2D
figure()
[X, Y] = meshgrid(alpha, Re); % Criar malha para o gráfico (alpha no X, Re no Y)
pcolor(X', Y', conf_NeuralFoil) % Gráfico colorido 2D (transpor para alinhar corretamente)
shading interp % Suavizar os contornos
colorbar % Adicionar barra de cores
colormap(flipud(gray))

% Ajustar aparência do gráfico
set(gca, 'YScale', 'log') % Escala logarítmica no eixo Y
xlabel('\alpha (graus)')
ylabel('Re')
title('Neural Foil Confidence')
grid on

% Salvar como arquivo PNG
saveas(gcf, './studies/neuralfoil_confidence/NeuralFoil_Confidence_2D.png')
